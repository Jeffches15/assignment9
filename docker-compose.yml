version: '3.8'

services:
  # Service: web
  web: # this is basically main.py
    build: .
    # make sure image has the :latest tag
    image: jeffches15/assignment9:latest

    # Container Naming
    container_name: assignment9_calculator

    # first port 8000 is external network (my computer)
    # routing to port 8000 for this container
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
      DATABASE_URL: postgresql://postgres:postgres@db:5432/fastapi_db
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - db
    networks:
      - app-network

  # Service: db (PostgreSQL)
  # this is the hostname/address in pgadmin for our server
  db:
    image: postgres
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fastapi_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Service: pgadmin
  # pgAdmin is a free, open-source graphical user interface (GUI) tool for managing PostgreSQL databases.
  pgadmin:
    image: dpage/pgadmin4  # Updated to a newer version
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"  # Ensure port 5050 is free or change if necessary
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

# kinda like your USB drive for data
volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  app-network:
    driver: bridge
